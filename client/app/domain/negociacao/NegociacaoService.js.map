{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obtemNegociacoesDaSemana","get","then","dados","negociacoes","map","objeto","Date","data","quantidade","valor","err","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;AAAQA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;AACAC,gC,+BAAAA,oB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAEKC,iB,GAAN,MAAMA,iBAAN,CAAwB;;AAE3BC,8BAAc;;AAEV,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;;AAEDM,2CAA2B;AACvB,2BAAO,KAAKD,KAAL,CACFE,GADE,CACE,oBADF,EAEFC,IAFE,CAGCC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EACIF,OAAOG,UADX,EAEIH,OAAOI,KAFX,CADgB,CAApB;AAIA,+BAAON,WAAP;AACH,qBATF,EAUCO,OAAO;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,uCAAzB,CAAN;AACH,qBAZF,CAAP;AAcH;;AAEDgB,mDAAmC;AAC/B,2BAAO,KAAKb,KAAL,CACFE,GADE,CACE,sBADF,EAEFC,IAFE,CAGCC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EACIF,OAAOG,UADX,EAEIH,OAAOI,KAFX,CADgB,CAApB;AAIA,+BAAON,WAAP;AACH,qBATF,EAUCO,OAAO;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,0DAAzB,CAAN;AACH,qBAZF,CAAP;AAcH;;AAEDiB,oDAAoC;AAChC,2BAAO,KAAKd,KAAL,CACFE,GADE,CACE,uBADF,EAEFC,IAFE,CAGCC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EACIF,OAAOG,UADX,EACuBH,OAAOI,KAD9B,CADgB,CAApB;;AAIA,+BAAON,WAAP;AACH,qBATF,EAUCO,OAAO;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,0DAAzB,CAAN;AACH,qBAZF,CAAP;AAcH;;AAEKkB,yCAAN,GAAmC;AAAA;;AAAA;AAC/B,4BAAI;AACA,gCAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,MAAKjB,wBAAL,EAD4B,EAE5B,MAAKY,gCAAL,EAF4B,EAG5B,MAAKC,iCAAL,EAH4B,CAAZ,CAApB;AAKA,mCAAOE,QACFG,MADE,CACK,UAACC,SAAD,EAAYC,IAAZ;AAAA,uCAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,6BADL,EACkD,EADlD,EAEFE,IAFE,CAEG,UAACC,CAAD,EAAGC,CAAH;AAAA,uCAASA,EAAEhB,IAAF,CAAOiB,OAAP,KAAmBF,EAAEf,IAAF,CAAOiB,OAAP,EAA5B;AAAA,6BAFH,CAAP;AAGH,yBATD,CASE,OAAMd,GAAN,EAAU;AACRe,oCAAQC,GAAR,CAAYhB,GAAZ;AACA,kCAAM,IAAIf,oBAAJ,CAAyB,kDAAzB,CAAN;AACC;;AAEN;;;;;;;;;;;;;AAfgC;AA4BlC;AAtF0B,a","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from  '../../util/HttpService.js';\r\nimport {Negociacao} from  './Negociacao.js';\r\nimport {ApplicationException} from '../../util/ApplicationException.js';\r\n\r\nexport class NegociacaoService {\r\n\r\n    constructor() {\r\n\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obtemNegociacoesDaSemana() {\r\n        return this._http\r\n            .get('negociacoes/semana')\r\n            .then(\r\n                dados => {\r\n                    const negociacoes = dados.map(objeto => \r\n                        new Negociacao(new Date(objeto.data), \r\n                            objeto.quantidade,\r\n                            objeto.valor));\r\n                    return negociacoes;\r\n                },\r\n                err => {\r\n                    throw new ApplicationException('Não foi possível obter as negociações');\r\n                }\r\n            )\r\n    }\r\n\r\n    obtemNegociacoesDaSemanaAnterior() {\r\n        return this._http\r\n            .get('negociacoes/anterior')\r\n            .then(\r\n                dados => {\r\n                    const negociacoes = dados.map(objeto => \r\n                        new Negociacao(new Date(objeto.data), \r\n                            objeto.quantidade,\r\n                            objeto.valor));\r\n                    return negociacoes;\r\n                },\r\n                err => {\r\n                    throw new ApplicationException('Não foi possível obter as negociações da semana anterior');\r\n                }\r\n            )\r\n    }\r\n\r\n    obtemNegociacoesDaSemanaRetrasada() {\r\n        return this._http\r\n            .get('negociacoes/retrasada')\r\n            .then(\r\n                dados => {\r\n                    const negociacoes = dados.map(objeto =>\r\n                        new Negociacao(new Date(objeto.data),\r\n                            objeto.quantidade, objeto.valor));\r\n\r\n                    return negociacoes;\r\n                },\r\n                err => {\r\n                    throw new ApplicationException('Não foi possível obter as negocições da semana retrasada');\r\n                }\r\n            );\r\n    }\r\n\r\n    async obtemNegociacoesDoPeriodo()  {\r\n        try {\r\n            let periodo = await Promise.all([\r\n                this.obtemNegociacoesDaSemana(),\r\n                this.obtemNegociacoesDaSemanaAnterior(),\r\n                this.obtemNegociacoesDaSemanaRetrasada()\r\n                ]);\r\n            return periodo\r\n                .reduce((novoArray, item) => novoArray.concat(item), [])\r\n                .sort((a,b) => b.data.getTime() - a.data.getTime());\r\n        } catch(err){\r\n            console.log(err);\r\n            throw new ApplicationException('Não foi possível obter as negociações do período')\r\n            };\r\n\r\n       /* return Promise.all([\r\n            this.obtemNegociacoesDaSemana(),\r\n            this.obtemNegociacoesDaSemanaAnterior(),\r\n            this.obtemNegociacoesDaSemanaRetrasada()\r\n        ])\r\n        .then(periodo => periodo\r\n                .reduce((novoArray, item) => novoArray.concat(item), [])\r\n                .sort((a,b) => b.data.getTime() - a.data.getTime())\r\n        )\r\n        .catch(err => {\r\n            console.log(err);\r\n            throw new Error('Não foi possível obter as negociações do período')\r\n        });*/\r\n    }\r\n}"]}